--USER_IDENTIFIERS
ALTER SESSION SET PLSCOPE_SETTINGS = 'IDENTIFIERS:ALL';

/*View the current setting of PLSCOPE_SETTINGS parameter*/
SELECT value
FROM v$parameter
WHERE name='plscope_settings'
/

/*Verify the PL/Scope occupancy in SYSAUX tablespace*/
SELECT occupant_desc, schema_name, space_usage_kbytes
FROM v$sysaux_occupants
WHERE occupant_name='PL/SCOPE'
/

ALTER PROCEDURE p_calc_user_points COMPILE PLSCOPE_SETTINGS='IDENTIFIERS:ALL'
/

SELECT plscope_settings
FROM user_plsql_object_settings
WHERE name='P_CALC_USER_POINTS'
/

WITH v AS
(
  SELECT line,  col,
         name,
  LOWER(type)   Type,
  LOWER(usage)  Usage,
  usage_id,
  usage_context_id
  FROM user_identifiers
  WHERE object_name = 'P_CALC_USER_POINTS'
  AND object_type = 'PROCEDURE'
)
  SELECT line, RPAD(LPAD(' ', 2*(level-1)) ||name, 25, '.')||' '||  RPAD(Type, 15)|| RPAD(Usage, 15)  IDENTIFIER_USAGE_CONTEXTS
  FROM v
  START WITH usage_context_id = 0
  CONNECT BY PRIOR usage_id = usage_context_id
  ORDER SIBLINGS BY line, col
/

--DBMS_METADATA
--Demo
SELECT dbms_metadata.get_ddl('TABLE','EMP','SCOTT')
FROM DUAL
/

/*Anonymous block to set transform handles */
BEGIN
 DBMS_METADATA.SET_TRANSFORM_PARAM (DBMS_METADATA.SESSION_TRANSFORM,'STORAGE',FALSE);
 DBMS_METADATA.SET_TRANSFORM_PARAM (DBMS_METADATA.SESSION_TRANSFORM,'SEGMENT_ATTRIBUTES',TRUE);
 DBMS_METADATA.SET_TRANSFORM_PARAM (DBMS_METADATA.SESSION_TRANSFORM,'PRETTY',true);
 DBMS_METADATA.SET_TRANSFORM_PARAM (DBMS_METADATA.SESSION_TRANSFORM,'SQLTERMINATOR',true);
 DBMS_METADATA.SET_TRANSFORM_PARAM (DBMS_METADATA.SESSION_TRANSFORM,'REF_CONSTRAINTS',false);
 DBMS_METADATA.SET_TRANSFORM_PARAM (DBMS_METADATA.SESSION_TRANSFORM,'TABLESPACE',TRUE);
 DBMS_METADATA.SET_TRANSFORM_PARAM (DBMS_METADATA.SESSION_TRANSFORM,'SIZE_BYTE_KEYWORD',false);
END;
/

SELECT dbms_metadata.get_ddl('TABLE','EMP','SCOTT')
FROM DUAL
/

/*Query to retrieve DDL of object grants of EMP */
SELECT
  DBMS_METADATA.get_dependent_ddl('OBJECT_GRANT','EMP','SCOTT') OBJ_GRANTS
FROM DUAL
/

select * from dba_tab_privs where table_name = 'EMP' and owner  = 'SCOTT'
/

/*Query to retrieve DDL of primary key in EMP table */
SELECT TO_CHAR( DBMS_METADATA.GET_DDL('INDEX','PK_EMP','SCOTT') )
FROM DUAL
/

  CREATE TABLE "SCOTT"."EMP_PART" 
   (	"EMPNO" NUMBER(4,0), 
	"ENAME" VARCHAR2(10), 
	"JOB" VARCHAR2(9), 
	"MGR" NUMBER(4,0), 
	"HIREDATE" DATE, 
	"SAL" NUMBER(7,2), 
	"COMM" NUMBER(7,2), 
	"DEPTNO" NUMBER(2,0), 
	"EMAIL" VARCHAR2(30), 
	 CONSTRAINT "PK_EMP_PART" PRIMARY KEY ("EMPNO")
  USING INDEX
   ) SEGMENT CREATION deferred
   PARTITION BY RANGE(EMPNO) SUBPARTITION BY RANGE(SAL)
   (
     partition p_emp_100 values less than (100)
     (subpartition p_emp_100_5K values less than (5000),
      subpartition p_emp_100_10K values less than (10000),
      subpartition p_emp_100_15K values less than (15000)
      )
   )
  TABLESPACE "USERS" ;
  
/*Anonymous block to set transform handles */
BEGIN
 DBMS_METADATA.SET_TRANSFORM_PARAM (DBMS_METADATA.SESSION_TRANSFORM,'STORAGE',FALSE);
 DBMS_METADATA.SET_TRANSFORM_PARAM (DBMS_METADATA.SESSION_TRANSFORM,'SEGMENT_ATTRIBUTES',TRUE);
 DBMS_METADATA.SET_TRANSFORM_PARAM (DBMS_METADATA.SESSION_TRANSFORM,'PRETTY',true);
 DBMS_METADATA.SET_TRANSFORM_PARAM (DBMS_METADATA.SESSION_TRANSFORM,'SQLTERMINATOR',true);
 DBMS_METADATA.SET_TRANSFORM_PARAM (DBMS_METADATA.SESSION_TRANSFORM,'REF_CONSTRAINTS',false);
 DBMS_METADATA.SET_TRANSFORM_PARAM (DBMS_METADATA.SESSION_TRANSFORM,'TABLESPACE',TRUE);
 DBMS_METADATA.SET_TRANSFORM_PARAM (DBMS_METADATA.SESSION_TRANSFORM,'SIZE_BYTE_KEYWORD',false);
 DBMS_METADATA.SET_TRANSFORM_PARAM (DBMS_METADATA.SESSION_TRANSFORM,'PARTITIONING',false);
END;
/

SELECT dbms_metadata.get_ddl('TABLE','EMP_PART','SCOTT')
FROM DUAL
/

SELECT dbms_metadata.get_XML('TABLE','EMP_PART','SCOTT')
FROM DUAL
/
